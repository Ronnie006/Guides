SPRING MVC - TILES INTEGRATION in Spring Tool Suite


1.) Create new Spring Legacy Project, name the project spring-tiles-integ and select Spring MVC Project, name the package anything  you want.
2.) Open src>main>webapp>WEB-INF>spring>root-context.xml
3.) Copy the content, then create new xml file named applicationContext.xml in src>main>resources, then paste the content,save then close.
4.) Delete src>main>webapp>WEB-INF>spring>root-context.xml

6.) Create tiles.xml in src/main/resources

7.) Paste this 

	<?xml version="1.0" encoding="UTF-8"?>
	<!DOCTYPE tiles-definitions PUBLIC
		"-//Apache Software Foundation//DTD Tiles Configuration 2.1//EN"
		"http://tiles.apache.org/dtds/tiles-config_2_1.dtd">
	<tiles-definitions>
		<definition name="common" template="/WEB-INF/views/template.jsp">
			<put-attribute name="footer" value="/WEB-INF/views/footer.jsp" />
		</definition>
		
		<definition name="index" extends="common">
			<put-attribute name="title" value="HOME" />
			<put-attribute name="body" value="/WEB-INF/views/body.jsp" />
		</definition>
	</tiles-definitions>

8.) Open src>main>webapp>WEB-INF>spring>appServlet>servlet-context.xml
9.) Copy the content, then create new xml file named applicationContext-web.xml in src>main>resources, then paste the content.

10.) Paste this in the bean tag 

	<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:mvc="http://www.springframework.org/schema/mvc"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

11.) Errors will occur so make sure your replace all "beans:beans" to "beans" and
12.) Add "mvc:" in <annotation-driven> and <resources>
13.) Comment the whole bean tag that has class="org.springframework.web.servlet.view.InternalResourceViewResolver"
14.) Paste this below

	<bean id="viewResolver"	class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass"	value="org.springframework.web.servlet.view.tiles2.TilesView" />
	</bean>

	<bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>classpath:/tiles.xml</value>
			</list>
		</property>
	</bean>

	Note: "classpath:/" is equal to "src/main/resources/"

15.) Open src>main>webapp>WEB-INF>web.xml, 
	replace the param-value in context-param tag with the location of applicationContext.xml
	also replace the param-value in init-param tag with the location of applicationContext-web.xml

16.)Open pom.xml
	
	add this to properties tag
	<apache.tiles>2.2.1</apache.tiles>

	add this to dependencies tag

	<!-- Tiles -->
	<dependency>
		<groupId>org.apache.tiles</groupId>
		<artifactId>tiles-core</artifactId>
		<version>${apache.tiles}</version>
	</dependency>
	
	<dependency>
		<groupId>org.apache.tiles</groupId>
		<artifactId>tiles-jsp</artifactId>
		<version>${apache.tiles}</version>
	</dependency>


17.) Create template.jsp, body.jsp footer.jsp in src/main/webapp/WEB-INF/views
18.) in template.jsp paste this .

	<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
		pageEncoding="ISO-8859-1"%>
	<%@ taglib uri="http://tiles.apache.org/tags-tiles" prefix="tiles"%>
	<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
	<html>
	<head>
	<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
	<title><tiles:getAsString name="title" /></title>
	</head>
	<body>

		<tiles:insertAttribute name="body" />

		<tiles:insertAttribute name="footer" />
	</body>
	</html>

19) on other jsps put anything you want but make sure the you delete first the html tags.

20.) Last, open open HomeController.java
	 paste this.
	 @RequestMapping(value = "/", method = RequestMethod.GET)
	public String index(){
		return "index";
	}

	Note: the return "index" means that it will look to tiles.xml with definition name="index" ;

21.) Analyze whatever  i've typed above.
